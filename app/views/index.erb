<div class="container">
  <h1><strong>CONFIDANT</strong></h1>
  <div class="well">
    <button>
      Add a friend    
    </button>
  </div>
  <div class="well">
    Show friend with ID:
    <input type="text" placeholder="ID"/>
    <input type="submit" value="SHOW">
  </div>
  <div class="well">
    Find friend by:
        <input type="text" placeholder="first name"/> OR
        <input type="text" placeholder="last name"/> OR
        <input type="text" placeholder="email"/>
        <input type="submit" value="FIND">
  </div>
  <div class="well">
    <button>
      List all friends    
    </button>
  </div>
  
</div>
<!--

class Application

  def new_contact
    puts "Please provide the following information:"
    begin
      email = get_email
      (raise DuplicateEmailError) if Contact.email_duplicate?(email)
      firstname = get_name("first")
      lastname = get_name("last")
      new_contact = Contact.new(firstname: firstname,lastname: lastname,email: email) 
      new_contact.save
      puts "Contact has been added to the database."
    rescue DuplicateEmailError => e
      puts "It seems that the email: #{email} you have provided is already in the system.\nNew contact could not be created."
    end
  end

  def list
    puts Contact.all
  end

  def show(id = nil)
    if id == nil || id.match(/\D/)
      puts "It seems you have provided an invalid number.\nPlease try again."
    else
      puts Contact.find(id)
    end
  end

  def find(column = nil,value = nil)
    search = { column: column, value: value }
    while search[:column] == nil || search[:value] == nil do
      search = clarify_find
    end

    case search[:column]
    when "firstname" then result = Contact.find_by_firstname(search[:value])
    when "lastname" then result = Contact.find_by_lastname(search[:value])
    when "email" then result = Contact.find_by_email(search[:value])
    else  result = "There is no such field as #{search[:column]}"
    end

    if result == nil
      result = "No #{search[:column]} was found with value the #{search[:value]}."
    end
    puts result
  end

  private

  def clarify_find
    search = { column: nil, value: nil }
    puts "Please clarify what you are looking for:\n(firstname / lastname / email)"
    search[:column] = STDIN.gets.chomp.strip
    puts "What is the #{search[:column]} you are looking for?"
    search[:value] = STDIN.gets.chomp.strip
    search
  end


  def get_email
    puts "Email Address?"
    email = ""
    while  (email = STDIN.gets.chomp.strip) == "" do
      puts "It seems you have not provided an email address.\nPlease specify email:"
    end

    email
  end

  def get_name(name)
    puts "#{name.capitalize} Name?"
    name = ""
    while (name = STDIN.gets.chomp.strip) == "" do
      puts "It seems you have not provided a name.\nPlease specify your #{name} name:"
    end
    name
  end
end

Application.new

 -->